<!DOCTYPE html><html><head>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<title>YouTube</title>

<style type="text/css">

body {
  font-size: 17px; line-height: 20px;
  font-family: 'times new roman', serif; 
  color: maroon; background-color: navajowhite;
  text-align: center;
}

.widevid {
  width: 736px; height: 414px;
  position: relative; overflow: hidden;
  border: 2px solid red; background-color: indigo;
}

.widevid:fullscreen {
  border: none;
}

.msgbox {
  position: absolute; top: 36%; left: 40%; right: 40%; display: block;
  text-align: center; border-radius: 10px;
  color: paleturquoise; background-color: slateblue;
  font-style: italic; cursor: pointer;
}

iframe {
  width: 100%; height: 100%;
  position: absolute; border: none;
  background-color: transparent;
  pointer-events: auto;
}

input {
  height: 17px; font-size: 13px;
  font-family: verdana, sans-serif;
  border-width: 2px; border-style: solid;
  border-color: tan lemonchiffon lemonchiffon burlywood;
  padding: 3px 5px 3px 5px; caret-color: navy; outline: none;
}

input[type=radio] {
  vertical-align: middle; margin: -2px 1px 1px 2px;
  filter: contrast(1.0) brightness(1.2) opacity(90%);
}

table {
  display: inline-block; border: 3px solid green;
}

td.textbox {
  width: 30vw; max-width: 250px;
  padding: 0 2px 0 0; vertical-align: top;
  text-align: center; white-space: nowrap;
}

td.vidbox {
  font-size: 15px; line-height: normal;
  padding: 0 0 0 2px; vertical-align: middle;
  text-align: left; border-left: 1px solid firebrick;
}

button {
  width: auto; height: auto;
  font-size: 14px; line-height: 20px;
  padding: 2px 6px 0 6px; margin: 0;
  font-family: helvetica, sans-serif;
  color: darkblue; background-color: pink;
  outline: none; border-size: 2px; border-style: solid;
  border-color: #e8e8e8 #9c9c9c #9c9c9c #ececec;
}

button:hover:active {
  border-color: #a8a8a8 #f8f8f8 #f4f4f4 #acacac;
}

hr {
  border-color: thistle; border-style: solid; margin: 12px 0;
}

::selection {
  color: yellow; background-color: orchid;
}

r_ { color: crimson; }
g_ { color: seagreen; }
b_ { color: blue; }

</style></head><body>

<h2 style="text-align:center;margin:7px 0 10px 0"><r_>YouTube Player</r_></h2>

<table><tr><td class="textbox">

<span style="display:block;font-size:22px;margin:15px 0 -8px">&#x1f408;</span>

<span style="display:inline-block;text-align:left">

<br><input type=radio name="tv" onclick="javascript:tv ('NOZKLtIIUZE')"> Hitler Rant
<br><input type=radio name="tv" onclick="javascript:tv ('m_MaJDK3VNE')"> Herding Cats
<br><input type=radio name="tv" onclick="javascript:tv ('0ZwfXUURS3g')"> Dukes of Hazzard
<br><input type=radio name="tv" onclick="javascript:tv ('uQJoar17jyo')"> Schiff Hits the Fan
<br><input type=radio name="tv" onclick="javascript:tv ('wLTGXblgUoc')"> Never Forget
<br><input type=radio name="tv" onclick="javascript:tv ('CGq8Ee2gOe4')"> DooM at QuakeCon
<br><input type=radio name="tv" onclick="javascript:tv ('kJAsn_vJyY4')"> Starship Enterprise
<br><input type=radio name="tv" onclick="javascript:tv ('FnV0LqHd3h8')"> Make America Great Again
<br><input type=radio name="tv" onclick="javascript:tv ('74VHwppfHuI')"> The Best Is Yet To Come
<br><input type=radio name="tv" onclick="javascript:tv ('XkkvC3D_srM')"> March of the Frogs
<br><input type=radio name="tv" onclick="javascript:tv ('sGdWkl9M_TY')"> American Airman
<br><input type=radio name="tv" onclick="javascript:tv ('AzEBH6DZJVk')"> St. James Infirmary
<br><input type=radio name="tv" onclick="javascript:tv ('W-gngBsA_DI')"> I Told You So
<br><input type=radio name="tv" onclick="javascript:tv ('w8KQmps-Sog')"> Uprising
<br><input type=radio name="tv" onclick="javascript:tv ('D_XdjviX6gQ')"> Cat Scratch Fever
<br><input type=radio name="tv" onclick="javascript:tv ('kx-inoYmN2Q')"> Alley Cat

</span><span style="display:block;font-size:22px;margin:14px 0 0;transform:scale(-1,1)">&#x1f408;</span>

</td><td class="vidbox">

<div class="widevid"><h2 id="msg" class="msgbox">No Video</h2>
<iframe id="frame" autoplay allowfullscreen controls></iframe>

</div></td></tr></table>

<div style="margin:12px 0 12px 0">
<!--
<input type=radio name="format" style="vertical-align:middle" value="18" checked> 360p &nbsp;
<input type=radio name="format" style="vertical-align:middle" value="22"> 720p</span> &nbsp;&nbsp;
-->
<g_>All videos are 360p only</g_> &nbsp;
<input type=text style="width:350px"> &nbsp;&nbsp;
<button onclick="javascript:play_url()">Play</button> &nbsp;
<button onclick="javascript:clear_video()">Stop</button>

</div><r_>Note: age-gated videos, such as the DooM sample, might not work.</r_> (<g_>updated August 6, 2024</g_>)

<script>

var cors_bypass = "https://m3u8.justchill.workers.dev/?url=";
var cors_kraker = "https://kraker-remote.vercel.app/?url=";
var response, textData, jsonData, busy = 0, cookies = {};
var line = document.querySelector ("input[type=text]");

var clear_video = function ()
{
  var vid = document.getElementById ("frame"), win = vid.parentNode;
  win.removeChild (vid); vid.src = "about:blank"; win.appendChild (vid);
  document.getElementById ("msg").innerHTML = "No Video";
}
////////////////////

var is_busy = function ()
{
  if (busy) return 1;
  document.getElementById ("msg").innerHTML = "Busy";
  busy = 1; return 0;
}
////////////////////

var no_fail = function ()
{
  if (!busy) document.getElementById ("msg").innerHTML = "Error";
  var Busy = busy; busy = 0; return (Busy);
}
////////////////////

var pullstring = function (s, t, u)
{
  var m = t.length, n = s.indexOf (t) + m;
  m = n < m ? -1 : (u ? s.indexOf (u, n) : s.length);
  return (m < 0 ? "" : s.substr (n, m - n));
}
////////////////////

var get_checked = function (name, value)
{
  var i = 0, j = value, k = document.getElementsByName (name);
  if (k && k.length) for (; i < k.length; i++) if (k [i].checked) j = k [i].value;
  if (isNaN (i = parseFloat (j))) return (j); else return (i);
}
////////////////////

var tv = function (id)
{
  line.value = "https://www.youtube.com/watch?v=" + id;
  clear_video(); request_youtube (id, get_checked ("format", 18));
}
////////////////////

var play_url = function ()
{
  var m, n, s, url = line.value.trim();

  if (url.includes ("youtube") || url.includes ("youtu.be"))
  {
    if ((n = url.indexOf ("?")) >= 0)
    {
      s = url.substr (n); url = url.substr (0, n);
      m = pullstring (s, "?v=", "") || pullstring (s, "&v=", "");
      if ((n = m.indexOf ("&")) >= 0) m = m.substr (0, n); if (m) url = "/" + m;
    }
    url = (n = url.lastIndexOf ("/")) < 0 ? "" : url.substr (n + 1);
  }

  if (url.length == 11) tv (url); else line.value = "Invalid";
}
////////////////////

const request_youtube = async (id, fmt) =>
{
  var i, j, n, s, t, sub, vid, aud, key, sig, nkey, webm, f = [0,0,0,0,0,0,0,0,0,0];

  var tag = "youtube"; if (is_busy()) return;
  var url = cors_bypass + "https://www.youtube.com/watch?v=" + id;

try
{
  response = await fetch (url);
  textData = await response.text();

  url = pullstring (textData, "ytInitialPlayerResponse = ", "};");
  if (url) sub = JSON.parse (url + "}");

  if (!url || !(sub = sub.streamingData))
  {
    if (s = pullstring (textData, '"PLAYER_JS_URL":"', '"'))
    {
      s = "https://www.youtube.com" + s.replace ("base.js", "offline.js");
      response = await fetch (cors_kraker + s); s = await response.text();
      s = pullstring (s, "signatureTimestamp:", ",");
    }
    n = s ? s * 1 : Math.trunc (Date.now() / 86400000) - 1;

    t = {
      videoId: id, playbackContext: { contentPlaybackContext: { signatureTimestamp: n }},
      context: { client: { gl: 'US', hl: 'en', clientName: 'TVHTML5_SIMPLY_EMBEDDED_PLAYER', clientVersion: '2.0' }}
    };
    s = JSON.stringify (t);

    url = cors_kraker + "https://www.youtube.com/youtubei/v1/player";
    response = await fetch (url, { method: 'POST', headers: {'content-type': 'application/json'}, body: s });
    jsonData = await response.json();

    if (!(sub = jsonData.streamingData)) throw ("!!!");
  }

  if (t = sub.formats)
    for (i = 0; i < t.length; i++) if ((s = t[i].itag) && (j = argformat (s)) >= 0) f[j] = i + 1;

  fmt = getformat (f, fmt);
  if ((i = argformat (fmt)) < 0 || (j = f [i] - 1) < 0) throw ("!!!");

  webm = i > 3; if (!tag) aud = yt_split (t [f [webm + 8] - 1]);
  vid = yt_split (t [j]); url = vid [0]; sig = vid [1]; if (!url) throw ("!!!");

  if (sig || url.includes ("&n="))
  {
    if (!(s = pullstring (textData, '"PLAYER_JS_URL":"', '"')))
    {
      response = await fetch (cors_kraker + "https://www.youtube.com/embed/" + id);
      textData = await response.text();

      s = textData.substr (textData.indexOf ("base.js") - 100, 107);
      if ((i = s.indexOf ("/s/player/")) < 0) throw ("!!!"); s = s.substr (i);
    }

    key = cookies [s]; nkey = cookies ["!" + s];

    if ((sig && !key) || (!sig && !nkey))
    {
      response = await fetch (cors_kraker + "https://www.youtube.com" + s);
      textData = await response.text();

      cookies [s] = key = yt_algo (textData);

      if (n = textData.indexOf ('var b=a.split(a.slice(0,0))') + 1)
      {
        t = textData.substr (--n, textData.indexOf ('b.join("")', n) - n);
        t = 'function(a){var b=a.split(""' + t.substr (t.indexOf ('),')) + 'b.join("")};';
        cookies ["!" + s] = nkey = "var nsig=" + t + " sig=nsig(sig);";
      }
    }

    url = yt_nsig (url, nkey); if (sig && key) { eval (key); url += "&sig=" + sig; }
  }

} catch (err) { console.log (err); busy = 0; }

  if (no_fail()) load_stream (url);
}
////////////////////

var yt_split = function (data)
{
  var d, i, r, s, u = data.url; i = r = s = "";

  if (!u) if (!(u = data.signatureCipher)) u = ""; else
  {
    u = u.replace (/%25/g, "%"); u = decodeURIComponent (u);
    s = pullstring (u, "s=", "&"); u = pullstring (u, "url=", "");
  }

  i = (d = data.initRange)  ? d.start + "-" + d.end : "";
  r = (d = data.indexRange) ? d.start + "-" + d.end : "";

  if (!(d = data.approxDurationMs)) d = 0;

  return ([u, s, d / 1000, i + "," + r]);
}
////////////////////

var yt_algo = function (data)
{
  var i, j, n, s, v;

  for (i = 0; i < 3; i++)
  {
    j = data.indexOf ('a=a.split("")'); if (j < 0) return "";
    s = data.substr (j + 14, 300); if ((n = s.indexOf ("a.join")) > 0) break;
    if (i > 1) return ""; data = data.substr (j + 1);
  }

  s = s.substr (0, n - 7);
  v = "var " + s.substr (0, s.indexOf (".")) + "={";
  if ((n = data.indexOf (v)) < 0) return "";

  v = data.substr (n, 300); v = v.substr (0, v.indexOf ("};") + 2);
  return (v + "var a=sig.split('');" + s + "sig=a.join('');");
}
////////////////////

var yt_nsig = function (url, nkey)
{
  var sig = pullstring (url, "&n=", "&"); if (!nkey || !sig) return url;
  var s = "&n=" + sig + "&"; eval (nkey); sig = "&n=" + sig + "&";
  return (url.replace (s, sig));
}
////////////////////

var load_stream = function (url)
{
  var bstyle = "<body style='margin:0;padding:0;overflow:hidden;background-color:";
  var istyle = " style='position:absolute;border:none;outline:none;width:100%;height:100%'";
  var vstyle = " autoplay controls allowfullscreen ";

  var insert = bstyle + "black'><video" + istyle + vstyle + "id='video'></video></body>";

  var doc = document.getElementById ("frame").contentDocument;
  doc.open(); doc.write ("<!DOCTYPE html>" + insert); doc.close();
  doc.getElementById ("video").src = url;
}
////////////////////

var argformat = function (fmt)
{
  if (fmt == 18) return 0;
  if (fmt == 19) return 1;
  if (fmt == 22) return 2;
  if (fmt == 37) return 3;
  if (fmt == 43) return 4;
  if (fmt == 44) return 5;
  if (fmt == 45) return 6;
  if (fmt == 46) return 7;

  return -1;
}

var getformat = function (f, fmt)
{
  if (f[0] <= 0 && f[1] <= 0 && f[2] <= 0 && f[3] <= 0)
  {
    if (fmt == 18) fmt = 43;
    if (fmt == 19) fmt = 44;
    if (fmt == 22) fmt = 45;
    if (fmt == 37) fmt = 46;
  }

  if (f[4] <= 0 && f[5] <= 0 && f[6] <= 0 && f[7] <= 0)
  {
    if (fmt == 43) fmt = 18;
    if (fmt == 44) fmt = 19;
    if (fmt == 45) fmt = 22;
    if (fmt == 46) fmt = 37;
  }

  var m = 0, n = fmt;

  if (n == 37) if (f[3]) m = n; else n = 22;
  if (n == 22) if (f[2]) m = n; else n = 19;
  if (n == 19) if (f[1]) m = n; else n = 18;
  if (n == 18) if (f[0]) m = n;

  n = fmt; if (m) return m;

  if (n == 18) if (f[0]) m = n; else n = 19;
  if (n == 19) if (f[1]) m = n; else n = 22;
  if (n == 22) if (f[2]) m = n; else n = 37;
  if (n == 37) if (f[3]) m = n;

  n = fmt; if (m) return m;

  if (n == 46) if (f[7]) m = n; else n = 45;
  if (n == 45) if (f[6]) m = n; else n = 44;
  if (n == 44) if (f[5]) m = n; else n = 43;
  if (n == 43) if (f[4]) m = n;

  n = fmt; if (m) return m;

  if (n == 43) if (f[4]) m = n; else n = 44;
  if (n == 44) if (f[5]) m = n; else n = 45;
  if (n == 45) if (f[6]) m = n; else n = 46;
  if (n == 46) if (f[7]) m = n;

  return m;
}

</script></body></html>

