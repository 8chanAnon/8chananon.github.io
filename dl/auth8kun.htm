<!DOCTYPE html><html><head>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="referrer" content="no-referrer">
<base target="_blank">

<title>8kun Authentigator</title>

<style type="text/css">

body {
  text-align: center; padding: 0 30px;
  font-size: 16px; line-height: 19px;
  font-family: 'times new roman', serif;
  color: brown; background-color: navajowhite;
}

input {
  height: 17px; font-size: 16px; outline: none;
  font-family: 'consolas', 'lucida console', monospace;
  padding: 3px 5px 3px 5px; caret-color: navy;
  color: crimson; background-color: seashell;
  border: 2px solid burlywood; border-radius: 4px; text-align: center;
}

button {
  width: auto; height: auto;
  font-size: 15px; line-height: 19px;
  padding: 1px 6px 0 6px; margin: 0;
  font-family: 'helvetica', sans-serif;
  color: purple; background-color: powderblue;
  outline: none; border-color: #e8e8e8 #9c9c9c #9c9c9c #ececec;
}

button:hover:active {
  border-color: #a8a8a8 #f8f8f8 #f4f4f4 #acacac;
}

h1 {
  margin: 20px 0 30px 0;
}

::selection {
  color: yellow; background-color: orchid;
}

r_ { color: crimson; }
g_ { color: green; }
b_ { color: blue; }

</style></head><body><h1><g_>8kun Authentigator</g_></h1>

<input type=text style="width:196px"><br><br>
<button onclick="javascript:hitme()">Hit Me!</button> &nbsp
<button onclick="javascript:copyme()">Copy</button>
<p><br>
It appears that someone is actively trying to defeat the 8kun Authentigator.<br>
<r_>This app updated (3pm EST on Oct 17, 2020) to get around another blocking attempt.</r_>
<p>
The proxy server that was originally used to bypass the browser cross-origin restrictions got flagged as a spambot.
<br>Also, I posted an update recommending the installation of a CORS unblocking extension which worked at the time
but now the authentication server disallows the "Content-Type" header in the OPTIONS pre-flight request. This header
needs to be set to "application/json" else the POST request won't work (status 404). This is a problem which a
simple CORS unblocker is not designed to solve.
<p>
<b>All is not lost but the next step is a big one. This will require the installation of a local proxy server.</b>
<p> The server
is designed to deal with situations like this (and much more). The later versions include a DNS manager and an .onion
redirector so you won't be installing this just to run the Authentigator. The proxy server requires the installation
of Node.js but it's a pretty basic one-time thing.
<p>
Click <a href="https://8chananon.github.io/Alleycat-Player/current/installation-v2.htm">here</a>
for the installation instructions (the server was originally designed to run my Alleycat Player app).
<p>
Save the 8kun Authentigator (this file) in the same folder as the proxy server (not in the Node.js folder).
<br>
The app needs "crypto.js" which comes with the installation package.
<p>
Load the app with <g_>http://localhost:8080/auth8kun.htm</g_> and it will work as intended.
</body>

<script src="crypto.js"></script>

<script>

var resp, data;

var auth_url  = "https://auth.128ducks.com/auth/xMtkntWveZiCCC";
var proxyhost = "http://localhost:8080/";

var appToken = "Je44n4mNaNqbdj3nsk3bHeb56mdMen49sk3k";
var password = "n4nebdLwmUedniqNebldnI3em3Nerkdd";

var copyme = function ()
{
  document.getElementsByTagName ("input")[0].select();
  document.execCommand ("copy");
}

var hitme = async () =>
{
  document.getElementsByTagName ("input")[0].value = "Working...";
  var deviceID = CryptoJS.enc.Hex.stringify (CryptoJS.lib.WordArray.random (8));

  var key = password, time = Math.trunc (Date.now() / 1000);
  var msg = appToken + "|||" + deviceID + "|||" + time.toString();

  var iv = CryptoJS.enc.Utf8.parse (key.substr (0, 16));
  key = CryptoJS.enc.Utf8.parse (key);
  msg = CryptoJS.enc.Utf8.parse (msg);

  var head = { 'Content-Type': 'application/json' };
  data = CryptoJS.AES.encrypt (msg, key, { iv: iv });
  data = '{"token":"' + data.toString() + '"}';
  msg = "user-agent=|*";
	
  try {
    resp = await fetch (proxyhost + msg + auth_url, { method: 'POST', headers: head, body: data });
    data = await resp.json();
  } catch (e) { data = ""; }

  var p = data.result || "", q = p.replace (/\D/g, "");
  if (!p) q = "error"; else if (q.length != 7) q = p;

  document.getElementsByTagName ("input")[0].value = q;
}

</script></html>
